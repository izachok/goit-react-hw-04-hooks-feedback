{"version":3,"sources":["components/Section/Section.js","components/FeedbackOptions/FeedbackOptions.js","components/Statistics/Statistics.js","components/Notification/Notification.js","App.js","index.js","components/FeedbackOptions/FeedbackOptions.module.css"],"names":["Section","title","children","FeedbackOptions","options","onLeaveFeedback","Object","keys","map","key","type","className","s","item","onClick","Statistics","total","positivePercentage","renderStatistics","Notification","message","stateType","App","useState","good","setGood","neutral","setNeutral","bad","setBad","countTotalFeedback","prev","Error","Math","round","countPositiveFeedbackPercentage","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"+OAEe,SAASA,EAAT,GAA4C,IAAD,IAAxBC,aAAwB,MAAhB,GAAgB,EAAZC,EAAY,EAAZA,SAC5C,OACE,gCACGD,GAAS,6BAAKA,IACdC,K,oBCsBQC,MAxBf,YAAwD,IAA7BC,EAA4B,EAA5BA,QAASC,EAAmB,EAAnBA,gBAClC,OACE,8BACGC,OAAOC,KAAKH,GAASI,KAAI,SAAAC,GAAG,OAC3B,wBAEEC,KAAK,SACLC,UAAWC,IAAEC,KACbC,QAAS,WACPT,EAAgBI,IALpB,mBAQMA,IAPCA,SCPA,SAASM,EAAT,GAIX,IAHFX,EAGC,EAHDA,QAGC,IAFDY,aAEC,MAFO,EAEP,MADDC,0BACC,MADoB,EACpB,EACD,OACE,gCACGC,EAAiBd,GAClB,wCAAWY,KACX,oDAAuBC,EAAvB,UAWN,IAAMC,EAAmB,SAAUd,GACjC,OAAOE,OAAOC,KAAKH,GAASI,KAAI,SAAAC,GAAG,OACjC,8BACGA,EADH,KACUL,EAAQK,KADVA,OCxBG,SAASU,EAAT,GAAyC,IAAD,IAAhBC,eAAgB,MAAN,GAAM,EACrD,OAAO,8BAAMA,ICKf,IAAMC,EACE,OADFA,EAEK,UAFLA,EAGC,MAGQ,SAASC,IACtB,MAAwBC,mBAAS,GAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAA8BF,mBAAS,GAAvC,mBAAOG,EAAP,KAAgBC,EAAhB,KACA,EAAsBJ,mBAAS,GAA/B,mBAAOK,EAAP,KAAYC,EAAZ,KAeMC,EAAqB,WACzB,OAAON,EAAOE,EAAUE,GAQpBZ,EAAQc,IACd,OACE,gCACE,cAAC9B,EAAD,CAASC,MAAM,wBAAf,SACE,cAAC,EAAD,CACEG,QAAS,CAAEoB,OAAME,UAASE,OAC1BvB,gBA5BY,SAAAK,GAClB,OAAQA,GACN,KAAKW,EACH,OAAOI,GAAQ,SAAAM,GAAI,OAAIA,EAAO,KAChC,KAAKV,EACH,OAAOM,GAAW,SAAAI,GAAI,OAAIA,EAAO,KACnC,KAAKV,EACH,OAAOQ,GAAO,SAAAE,GAAI,OAAIA,EAAO,KAC/B,QACE,MAAM,IAAIC,MAAJ,iCAAoCtB,UAsB5C,cAACV,EAAD,CAASC,MAAM,aAAf,SACGe,EAAQ,EACP,cAACD,EAAD,CACEX,QAAS,CAAEoB,OAAME,UAASE,OAC1BZ,MAAOA,EACPC,mBAnB8B,WACtC,IAAMD,EAAQc,IACd,OAAOd,EAAQ,EAAIiB,KAAKC,MAAOV,EAAOR,EAAS,KAAO,EAiB1BmB,KAGtB,cAAChB,EAAD,CAAcC,QAAQ,2BClDhCgB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAChB,EAAD,MAEFiB,SAASC,eAAe,U,kBCT1BC,EAAOC,QAAU,CAAC,KAAO,iC","file":"static/js/main.0400424a.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\n\nexport default function Section({ title = '', children }) {\n  return (\n    <div>\n      {title && <h2>{title}</h2>}\n      {children}\n    </div>\n  );\n}\n\nSection.propTypes = {\n  title: PropTypes.string,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport s from './FeedbackOptions.module.css';\n\nfunction FeedbackOptions({ options, onLeaveFeedback }) {\n  return (\n    <div>\n      {Object.keys(options).map(key => (\n        <button\n          key={key}\n          type=\"button\"\n          className={s.item}\n          onClick={() => {\n            onLeaveFeedback(key);\n          }}\n        >\n          {`${key}`}\n        </button>\n      ))}\n    </div>\n  );\n}\n\nFeedbackOptions.propTypes = {\n  options: PropTypes.object.isRequired,\n  onLeaveFeedback: PropTypes.func.isRequired,\n};\n\nexport default FeedbackOptions;\n","import PropTypes from 'prop-types';\n\nexport default function Statistics({\n  options,\n  total = 0,\n  positivePercentage = 0,\n}) {\n  return (\n    <div>\n      {renderStatistics(options)}\n      <p>Total: {total}</p>\n      <p>Positive feedback: {positivePercentage}%</p>\n    </div>\n  );\n}\n\nStatistics.propTypes = {\n  options: PropTypes.object.isRequired,\n  total: PropTypes.number.isRequired,\n  positivePercentage: PropTypes.number.isRequired,\n};\n\nconst renderStatistics = function (options) {\n  return Object.keys(options).map(key => (\n    <p key={key}>\n      {key}: {options[key]}\n    </p>\n  ));\n};\n","export default function Notification({ message = '' }) {\n  return <div>{message}</div>;\n}\n","import { useState } from 'react';\nimport Section from './components/Section';\nimport FeedbackOptions from './components/FeedbackOptions';\nimport Statistics from './components/Statistics';\nimport Notification from './components/Notification';\n\nconst stateType = {\n  GOOD: 'good',\n  NEUTRAL: 'neutral',\n  BAD: 'bad',\n};\n\nexport default function App() {\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n\n  const addFeedback = type => {\n    switch (type) {\n      case stateType.GOOD:\n        return setGood(prev => prev + 1);\n      case stateType.NEUTRAL:\n        return setNeutral(prev => prev + 1);\n      case stateType.BAD:\n        return setBad(prev => prev + 1);\n      default:\n        throw new Error(`unknown feedback type: ${type}`);\n    }\n  };\n\n  const countTotalFeedback = () => {\n    return good + neutral + bad;\n  };\n\n  const countPositiveFeedbackPercentage = () => {\n    const total = countTotalFeedback();\n    return total > 0 ? Math.round((good / total) * 100) : 0;\n  };\n\n  const total = countTotalFeedback();\n  return (\n    <div>\n      <Section title=\"Please leave feedback\">\n        <FeedbackOptions\n          options={{ good, neutral, bad }}\n          onLeaveFeedback={addFeedback}\n        />\n      </Section>\n      <Section title=\"Statistics\">\n        {total > 0 ? (\n          <Statistics\n            options={{ good, neutral, bad }}\n            total={total}\n            positivePercentage={countPositiveFeedbackPercentage()}\n          />\n        ) : (\n          <Notification message=\"No feedback given\" />\n        )}\n      </Section>\n    </div>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n// import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"FeedbackOptions_item__2mlJF\"};"],"sourceRoot":""}